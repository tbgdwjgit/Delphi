unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls;

type
  TForm1 = class(TForm)
    Image1: TImage;
    procedure Image1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Image1MouseUp(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Image1MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure LogInfo(LogFileName:string;LogInfo:string);
  end;

var
  Form1: TForm1;
  IsDrawing: Boolean = false;

implementation

{$R *.dfm}

procedure TForm1.Image1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
   IsDrawing := true;
   Image1.Canvas.MoveTo(X, Y);
   Image1.Canvas.Pen.Width := 5;
   Image1.Canvas.Pen.Color := clRed;
   Image1.Canvas.LineTo(X, Y);
   LogInfo('text.log',IntToStr(X)+ IntToStr(Y));
end;

procedure TForm1.Image1MouseUp(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
 IsDrawing := false;
end;

procedure TForm1.Image1MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  if IsDrawing then
  begin
    Image1.Canvas.LineTo(X, Y);
    LogInfo('text.log',IntToStr(X)+','+ IntToStr(Y));
  end;
end;

procedure TForm1.LogInfo(LogFileName, LogInfo: string);
var
  Lst:TStringList;
begin
  Lst:=TStringList.Create;
  if FileExists(LogFileName) then
  begin
    Lst.LoadFromFile(LogFileName);

    //if Lst.count > 15000 then
      //Lst.Clear;
  end;

  //Lst.Insert(0,FormatDateTime('yyyy-MM-dd hh:mm:ss.zzz',Now)+'--------'+LogInfo);
  Lst.Insert(0,LogInfo);
  Lst.SaveToFile(LogFileName);
  Lst.Free;
end;

end.
